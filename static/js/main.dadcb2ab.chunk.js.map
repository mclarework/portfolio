{"version":3,"sources":["images/Pokemon.png","images/Webclone.png","images/HangmanP.png","images/DiceGame.png","components/Nav.js","components/Home.js","components/About.js","components/Example.js","components/Projects.js","components/Contact.js","components/Bot.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","to","Home","About","Example","props","title","text","src","image","alt","height","width","href","url","Projects","examples","map","example","index","key","Contact","Bot","App","state","Poke","Clone","HangmanP","Dice","basename","exact","path","component","render","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dadcb2ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pokemon.3370eb25.png\";","module.exports = __webpack_public_path__ + \"static/media/Webclone.902ab737.png\";","module.exports = __webpack_public_path__ + \"static/media/HangmanP.24fa5026.png\";","module.exports = __webpack_public_path__ + \"static/media/DiceGame.2878a62c.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../style/Nav.css\";\n\nconst Nav = () => {\n  return (\n    <div className=\"navBar\">\n      <ul className=\"navList\">\n        <li>\n          <Link className=\"linkTag\" to=\"/\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link className=\"linkTag\" to=\"/about\">\n            About\n          </Link>\n        </li>\n        <li>\n          <Link className=\"linkTag\" to=\"/projects\">\n            Projects\n          </Link>\n        </li>\n        <li>\n          <Link className=\"linkTag\" to=\"/contact\">\n            Contact\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"../style/Home.css\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h1 className=\"heading\">Mike Clare</h1>\n      <h5 className=\"subheading\">Full Stack - Junior Developer</h5>\n      <div className=\"skills\">\n        <ul>\n          <li>React.js</li>\n          <li>Node.js</li>\n          <li>JavaScript</li>\n          <li>Git</li>\n          <li>CSS</li>\n          <li>HTML</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"../style/About.css\";\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <div className=\"left\">\n        <h1>My Journey into coding...</h1>\n      </div>\n      <div className=\"right\">\n        <p>\n          I always liked the idea of working with commputers and coding.\n          Something about the pure logic of the process appealed to me.\n        </p>\n        <p>\n          In December 2019 I had the opportunity to enroll on one of Code\n          Nation's Develop courses and I was right. I loved it!\n        </p>\n        <p>\n          Fast forward a month to January 2020 and I decided to follow up the\n          Develop course with a Master couse. A full immersive twelve week\n          bootcamp that trains people from novice to junior technical\n          profession.\n        </p>\n        <p>\n          The course is not over yet, but I haven't looked back. I am incredibly\n          passionate about learning new techniques and approaches to problems\n          and find myself building small phone web apps to entertain my\n          step-daughter, or sometimes just to see if I can.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport \"../style/Example.css\";\n\nconst Example = props => {\n  return (\n    <div className=\"example\">\n      <div className=\"title\">\n        <h3>{props.title}</h3>\n      </div>\n      <div className = \"info\">\n        <p>{props.text}</p>\n      </div>\n      <div className=\"image\">\n        <img src={props.image} alt=\"\" height=\"200px\" width=\"300px\" />\n      </div>\n      <div className=\"gitLink\">\n        <a href={props.url}>{props.url}</a>\n      </div>\n    </div>\n  );\n};\n\nexport default Example;\n","import React from \"react\";\nimport Example from \"./Example\";\nimport \"../style/Projects.css\";\n\nconst Projects = props => {\n  return (\n    <div className=\"projects\">\n      <h3 className=\"header\">Some examples of my work</h3>\n      <div className=\"examples\">\n        {props.examples.map((example, index) => {\n          return (\n            <Example\n              key={index}\n              title={example.title}\n              image={example.image}\n              text={example.text}\n              url={example.url}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport \"../style/Contact.css\";\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      <h5 className = \"textContact\">As a relative newcomer to the tech industry I would love to hear from other people and get their thoughts and feedback. If you want to get in touch or give any feedback then feel free to contact me directly or on LinkedIn.</h5>\n      <h5 className = \"textContact\">Contact:-</h5>\n      <ul className = \"list\">\n        <li className = \"listItem\">email address: michael__clare@hotmail.co.uk</li>\n        <li className = \"listItem\"><a href=\"https://www.linkedin.com/in/mike-clare/\">LinkedIn</a></li>\n      </ul>\n      <h4 className = \"textContact\">Or, just have a look at my github repository and leave any comments. All feedback is most welcome.</h4>\n      <ul className = \"list\">\n        <li className = \"listItem\"><a href=\"github.come/mclarework\">My github</a></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"../style/Bot.css\";\n\nconst Bot = () => {\n  return (\n    <div className=\"botBar\">\n      <p className=\"made\">Made with React.js</p>\n      <p className=\"date\">MC-2020</p>\n    </div>\n  );\n};\n\nexport default Bot;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\nimport Bot from \"./components/Bot\";\nimport Poke from \"./images/Pokemon.png\";\nimport Clone from \"./images/Webclone.png\";\nimport HangmanP from \"./images/HangmanP.png\";\nimport Dice from \"./images/DiceGame.png\";\nimport \"./style/App.css\";\n\nclass App extends Component {\n  state = {\n    examples: [\n      {\n        title: \"Pokémon Stat Finder\",\n        image: Poke,\n        text:\n          \"A small web app that takes data from a Pokémon API and allows you to search for Pokémon stats. Includes an autocomplete feature and arrow scrolling.\",\n        url: \"https://mclarework.github.io/poke-react-challenge/\"\n      },\n      {\n        title: \"D&D Beyond visual clone\",\n        image: Clone,\n        text:\n          \"A visual clone of the D&D Beyond website. This was early practise at using CSS and Flexbox to organise webpage layouts.\",\n        url: \"https://mclarework.github.io/dndbeyondWebClone/\"\n      },\n      {\n        title: \"Hangman\",\n        image: HangmanP,\n        text:\n          \"I made a simple Hangman game, but in Polish for one of my friends who is Polish.\",\n        url: \"https://mclarework.github.io/hangmanP/\"\n      },\n      {\n        title: \"Dice Game\",\n        image: Dice,\n        text:\n          \"A basic dice game. If your rolls total 21 before you roll a natural 1 then you win the game.\",\n        url: \"https://mclarework.github.io/diceGame/\"\n      }\n    ]\n  };\n  render() {\n    return (\n      <Router basename=\"/\">\n        <div className=\"App\">\n          <Nav />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route\n            path=\"/projects\"\n            render={() => <Projects examples={this.state.examples} />}\n          />\n          <Route path=\"/contact\" component={Contact} />\n          <Bot />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}